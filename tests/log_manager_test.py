"""Unit tests for LogWriter."""
from uuid import uuid4
from log_manager.log_writer import LogWriter


# Prefix for files generated by this function
TEST_ID = str(uuid4())


def test_basic():
    """Basic test for LogWriter class."""
    header = ["test1", "test2", "test3"]
    lw1 = LogWriter(header=header, prefix=TEST_ID)

    dict_to_write = {}
    dict_to_write["test1"] = "pew"
    dict_to_write["test2"] = "foo"
    dict_to_write["test3"] = "bar"

    lw1.write_line(dict_to_write)


def test_prefix_handling():
    """Test prefix validation for LogWriter."""
    # Invalid tab character
    catch_err_1 = False
    try:
        _ = LogWriter(header=["test"], prefix="\test")
    except AttributeError:
        catch_err_1 = True

    assert catch_err_1

    # Invalid backslash
    catch_err_2 = False
    try:
        _ = LogWriter(header=["test"], prefix="/test")
    except AttributeError:
        catch_err_2 = True
    assert catch_err_2

    # Invalid dot character
    catch_err_3 = False
    try:
        _ = LogWriter(header=["test"], prefix=".test")
    except AttributeError:
        catch_err_3 = True
    assert catch_err_3


def cleanup():
    """Clean up logs."""
    pass


test_basic()
test_prefix_handling()
cleanup()
